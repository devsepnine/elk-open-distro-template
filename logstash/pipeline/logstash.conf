input {
    beats {
            port => 5044
            host => "0.0.0.0"
            tags => "beat"
        }

    tcp {
        port => 5000
        codec => json_lines
        tags => "tcp"
    }
}

filter {
    if "accessnginx" in [fields][log_type] {
        grok {
            match => { "message" => ["%{IPORHOST:remote_ip} - %{DATA:username} \[%{HTTPDATE:time}\] \"%{WORD:method} %{DATA:url} HTTP/%{NUMBER:http_version}\" %{NUMBER:res_code} %{NUMBER:sent_bytes} \"%{DATA:referrer}\" \"%{DATA:agent}\""] }
            remove_field => "message"
        }
        mutate {
            add_field => { "read_timestamp" => "%{@timestamp}" }
        }
        date {
            match => [ "time", "dd/MMM/YYYY:H:m:s Z" ]
            remove_field => "time"
        }
        useragent {
            source => "agent"
            target => "user_agent"
            remove_field => "agent"
        }
        geoip {
            source => "remote_ip"
            target => "geo_ip"
        } 
    } else if "errornginx" in [fields][log_type] {
        grok {
            match => { "message" => ["%{DATA:error_time} \[%{DATA:error_level}\] %{NUMBER:error_pid}#%{NUMBER:error_tid}: (\*%{NUMBER:connection_id} )?%{GREEDYDATA:error_msg}"] }
            remove_field => "message"
        }
        mutate {
            rename => { "@timestamp" => "read_timestamp" }
        }
        date {
            match => [ "error_time", "YYYY/MM/dd H:m:s" ]
            remove_field => "error_time"
        }
    } 
}

output {
    if "beat" in [tags] {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "nginx-%{+YYYY-MM-dd}"
        }
    } else if "tcp" in [tags] {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "logstash-%{+YYYY-MM-dd}"
        }
    }
}